[{"content":" Earlier we configured Emails, now it’s time to see how to use it. At the main page of Email we see all the familiar elements:\nSearch\nProject picker\nCompose a new email (keyboard short c)\nOur email address (to make clear where we are, we could in some other project with a different email address)\nTabs. You can add more. The Unknown tab is activated when there are new emails from people we don’t yet know\nMore menu, like settings, sent emails, drafts\nEmail box, currently active email outlined.\nSelect checkbox — you can also select an item (like an email) with a keyboard shortcuts . and s. You can then perform group actions to multiple emails at once.\nSo, the main page of the Emails section looks very similar to all other main page in Aamu.app. It’s because of the unified UI all around the app. That’s nice, isn’t it?\nEmail viewLet’s compose a new email:\nWhat do we see here:\nOur Gravatar photo (using our email address ilkka@aamu.app)\nThe From field (us)\nTo field\nSubject field\nEmail body (pre-filled with the footer we have defined in the settings)\nWe are using gravatars in the email section, because they are universal and used by others.\nIncoming emailsIf the email is coming from an unknown source, the email will be seen in the Unknown tab:\nAnd in the tab itself:\nOn the right sidebar, you will also see the project, where the incoming email is.\nAnd when you click the email (or view it by pressing Enter when the correct email is outlined), you see this:\nWhen we see a new email from an unknown source, we select the tab that it will go to. If it’s spam, the emails from this sender will be hidden from you in the spam folder.\nCongratulations, the sender was worthy of getting into the Primary tab:\nEmail subject\nFrom\nTo\nEmail body Starring the email\nShow images (will be remembered for the sender)\nMore menu\nOur reply\nCreate task\nThe notable thing here is the Create task. If the email requires further work, you can create a task from it.\n","permalink":"https://aamu.app/blog/posts/aamuapp-emails-feature-overview/","summary":"\u003cp\u003eEarlier we configured Emails, now it’s time to see how to use it. At the main page of Email we see all the familiar elements:\u003c/p\u003e\u003cimg src=\"4460478873156794_image.png\" style=\"width: auto;\" id=\"1b5205fc-4f8b-4b4d-ad80-9d0f919782c3\"\u003e\u003col\u003e\u003cli\u003e\u003cp\u003eSearch\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eProject picker\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eCompose a new email (keyboard short \u003ccode\u003ec\u003c/code\u003e)\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eOur email address (to make clear where we are, we could in some other project with a different email address)\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eTabs. You can add more. The \u003cem\u003eUnknown\u003c/em\u003e tab is activated when there are new emails from people we don’t yet know\u003c/p\u003e","title":"Aamu.app Emails - feature overview"},{"content":" Everywhere that you write content in Aamu.app, i.e. comments, tasks, docs etc., can can add internal links with the slash menu:\nThere you are presented with a dialog window, which has a search input box:\nHere my search term is “search for” and it is currently searching for tasks. I can search for any item types in Aamu.app. Switching between tabs can be done with a mouse (obviously), but also with the shortcut Shift + left and Shift + right.\nWhen you click the item that you want to create a link to, this will be added to the document:\nIt will add a familiar box into the document/comment that you are currently writing. Clicking the box will take you to that item. Pressing Esc will take you back.\nThis is how easy it is to reference other items in Aamu.app. You can link from everywhere to anywhere!\n","permalink":"https://aamu.app/blog/posts/internal-links-in-aamuapp/","summary":"\u003cp\u003eEverywhere that you write \u003cem\u003econtent\u003c/em\u003e in Aamu.app, i.e. comments, tasks, docs etc., can can add \u003cem\u003einternal links\u003c/em\u003e with the slash menu:\u003c/p\u003e\u003cimg src=\"9567158024223956_image.png\" style=\"width: auto;\" id=\"29421ff1-900e-41e9-a6f0-d7f048b315ec\"\u003e\u003cp\u003eThere you are presented with a dialog window, which has a search input box:\u003c/p\u003e\u003cimg src=\"1435869297912415_image.png\" style=\"width: auto;\" id=\"f6d27260-47a0-4bc6-867e-0cabbb0866ed\"\u003e\u003cp\u003eHere my search term is “search for” and it is currently searching for tasks. I can search for any item types in Aamu.app. Switching between tabs can be done with a mouse (obviously), but also with the shortcut \u003ccode\u003eShift + left\u003c/code\u003e and \u003ccode\u003eShift + right\u003c/code\u003e.\u003c/p\u003e","title":"Internal Links in Aamu.app"},{"content":" There are certain shortcuts that are very useful in Aamu.app, as they work almost everywhere, in a unified fashion.\nOne of them is n, which creates a new task, anywhere you are.\nAnother is c, which creates new item, item type being determined where you are in the app at the moment. For example, if you are in Emails, c will compose a new email.\nAlmost every type of item has a comment section. Pressing r will create a new reply (or a new comment) in the comment section. Moving up/down in the item list can be done just be up or down. This way you can move the active item up or down.\nSelecting the item that is active can be done with s or ..\nSetting the active item or selected items as closed can be done with x.\nThose are the most important. The full list is below.\nKeyboard shortcuts around Aamu.app1 Go to home\n2-0 Go to different 'apps' (right sidebar)\nAlt - up/down Switch up/down of 'apps' (right sidebar)\nn New task\nc Compose a new 'item' (for exampe a new email on email page)\np Switch to a different project (where project menu is present)\nShift - left/right Switch between tabs (where there are tabs present)\ns or . Select the current item\nShift - up/down Select the current item and go up/down in list\nx Toggle item's status between open and close. Or toggle selected items\nr Reply with a comment where the comment field is present\nAlt - c Toggle comment panel on pages where it exists\nESC Close the topmost window/dialog\n","permalink":"https://aamu.app/blog/posts/keyboard-shortcuts-in-aamuapp/","summary":"\u003cp\u003eThere are certain shortcuts that are very useful in Aamu.app, as they work almost everywhere, in a unified fashion.\u003c/p\u003e\u003cp\u003eOne of them is \u003ccode\u003en\u003c/code\u003e, which creates a new task, anywhere you are.\u003c/p\u003e\u003cp\u003eAnother is \u003ccode\u003ec\u003c/code\u003e, which creates new item, item type being determined where you are in the app at the moment. For example, if you are in Emails, \u003ccode\u003ec\u003c/code\u003e will compose a new email.\u003c/p\u003e\u003cp\u003eAlmost every type of item has a comment section. Pressing \u003ccode\u003er\u003c/code\u003e will create a new reply (or a new comment) in the comment section. \u003c/p\u003e","title":"Keyboard shortcuts in Aamu.app"},{"content":" Even though we know that Aamu.app is the perfect productivity app, we may be interested to know what else is out there. This is why I’ve compiled this handy list to show you that you don’t actually miss out on anything important, if you choose Aamu.app.\nThere are actually tens of thousands of these apps, so no sane person (or even an AI) will ever be able to try them all. But here’s the first hundred and then some.\nTask Management \u0026amp; To-Do Lists\nTodoist - Intuitive task management with priority settings and integrations.\nTickTick - Combines to-do lists, habit tracking, and calendar views.\nMicrosoft To Do - Task management integrated with Microsoft 365.\nAny.do - Simple task and calendar app with cross-platform sync.\nTrello - Visual task management with Kanban boards and automation via Butler.\nClickUp - All-in-one platform for tasks, docs, goals, and time tracking.\nAsana - Project and task management with multiple views (lists, boards, timelines).\nMonday.com - Customizable work management with automation and integrations.\nWunderlist - Simple to-do list app (now largely replaced by Microsoft To Do).\nTaskade - Collaborative task lists with real-time syncing and templates.\nOmniFocus - Advanced task management for Apple users with robust prioritization.\nThings 3 - Sleek task manager for Apple devices with a focus on simplicity.\nMeisterTask - Kanban-style task management with team collaboration.\nTodo List - Basic task management (generic, often confused with Todoist).\nWeekdone - OKR and goal-tracking tool with progress analytics.\nWrike - Enterprise-grade task and project management with reporting.\nSmartsheet - Spreadsheet-based project management with automation.\nAirtable - Flexible database and task management with customizable templates.\nBasecamp - All-in-one project management with to-do lists and messaging.\nProofHub - Project management with task tracking and team collaboration.\nJira Software - Agile project management for software development teams.\nGanttPRO - Gantt chart-based project management for timeline tracking.\nTeamwork - Project management for small to midsize teams with client access.\nFavro - Agile project management with card-based workflows.\nQuip - Task management with integrated docs and spreadsheets.\nFlow - Task and project management with a focus on simplicity.\nHive - Collaborative project management with analytics and integrations.\nNotion - Customizable workspace for tasks, notes, and databases.\nCoda - Doc-based task management with interactive workflows.\nClickUp Brain - AI-powered task summarization and automation within ClickUp.\nLinear - Lightweight issue tracking and project management for software teams.\nPlane - Open-source alternative to Jira and Linear with issue tracking and roadmaps.\nTime Tracking \u0026amp; Scheduling\nToggl Track - Simple time tracking with integrations for project management.\nHarvest - Time tracking with invoicing and project budget tools.\nClockify - Free time tracking with calendar views and team reports.\nHubstaff - Time tracking with employee monitoring and payroll integration.\nEverhour - Time tracking with project management integrations.\nRescueTime - Automated time tracking for productivity insights.\nWebWork Time Tracker - Time and productivity monitoring with screenshots.\nHourStack - Time tracking with calendar and project integrations.\nMotion - AI-powered time management and scheduling for teams.\nCalendly - Automated scheduling for meetings and appointments.\nDoodle - Group scheduling and polling for meeting coordination.\nSavvyCal - Modern scheduling with personalized links and branding.\nTimeCamp - Time tracking with automatic task categorization.\nTimely - AI-driven time tracking with memory-based logging.\nFinancial Cents - Time tracking and project management for accounting.\nAmie - Time management and note-taking app with scheduling integration.\nCommunication \u0026amp; Collaboration\nSlack - Team messaging with channels and app integrations.\nMicrosoft Teams - Collaboration hub with chat, video, and Office 365 integration.\nZoom - Video conferencing with screen sharing and recording.\nGoogle Meet - Video conferencing integrated with Google Workspace.\nSkype - Video and voice calls with messaging and screen sharing.\nBeeper - Unified messaging app for multiple platforms.\nFleep - Messaging app with email integration and file sharing.\nZoho Cliq - Team chat with task and calendar integration.\nRingCentral - VoIP platform with phone, video, and messaging.\nDialpad - AI-powered VoIP and video conferencing solution.\nKrisp - AI noise-canceling app for clear calls and recordings.\nFellow - Meeting management with notes and action item tracking.\nLoom - Screen recording with AI transcription and editing.\nClariti - AI-powered hub for email, chat, and docs.\nDiscord - Community-driven messaging with voice and video.\nNote-Taking \u0026amp; Documentation\nEvernote - Note-taking with search and organization features.\nGoogle Docs - Collaborative document editing with real-time sync.\nMicrosoft OneNote - Note-taking integrated with Microsoft 365.\nNotion AI - AI-enhanced note-taking within the Notion platform.\nObsidian - Knowledge base with markdown-based note-linking.\nRoam Research - Note-taking with networked thought organization.\nBear - Minimalist note-taking for Apple users with markdown support.\nJoplin - Open-source note-taking with cross-platform sync.\nTettra - Knowledge base for team documentation and wikis.\nGuru - Knowledge management with AI search and integrations.\nConfluence - Team documentation with Jira and Atlassian integration.\nCoda - Interactive docs with task management features.\nClickUp Docs - Documentation tool within the ClickUp ecosystem.\nDropbox Paper - Collaborative document editing with file storage.\nSlite - Team documentation with a focus on simplicity.\nAutomation \u0026amp; Workflow\nZapier - Automates workflows by connecting apps with \"Zaps.\"\nIFTTT - Automation for apps, devices, and smart home systems.\nAppy Pie Automate - No-code automation with extensive integrations.\nMake (formerly Integromat) - Visual automation for complex workflows.\nAutomate.io - App integration and automation for small businesses.\nn8n - Open-source workflow automation with custom nodes.\nTransformio - Data transformation tool for integrating workflows.\nAirplane - Platform for building internal tools and automating workflows.\nEmail \u0026amp; Inbox Management\nSaneBox - AI-powered email sorting and management.\nSuperhuman - Fast email client with AI and keyboard shortcuts.\nCanary Mail - AI-powered email with encryption and snoozing.\nHey - Innovative email service with an \"Imbox\" for prioritization.\nClean Email - Email cleanup and organization tool.\nUnroll.me - Email subscription management for reducing clutter.\nRight Inbox - Email productivity with scheduling and reminders.\nSpark - Collaborative email client with smart inbox features.\nFile Storage \u0026amp; Sharing\nGoogle Drive - Cloud storage with collaboration tools.\nDropbox - File storage with syncing and sharing features.\nBox - Secure file storage with enterprise-grade collaboration.\nOneDrive - Cloud storage integrated with Microsoft 365.\nWeTransfer - Simple file transfer for large files.\nMind Mapping \u0026amp; Brainstorming\nMindMeister - Collaborative mind mapping for brainstorming.\nCoggle - Simple mind mapping with real-time collaboration.\nMiro - Virtual whiteboard with video conferencing and integrations.\nXMind - Mind mapping with advanced visualization options.\nLucidchart - Diagramming and flowchart tool for teams.\nFocus \u0026amp; Productivity Boosters\nFreedom - Distraction blocker for websites and apps.\nBrain.fm - AI-generated music for focus and productivity.\nEngross - Pomodoro timer with focus analytics.\nForest - Focus app with gamified productivity tracking.\nHabitica - Gamified habit and task tracker.\nSunsama - Daily planner with time-blocking and mindfulness focus.\nFocus@Will - Music and timers for deep focus sessions.\nCustomer Relationship Management (CRM) \u0026amp; Marketing\nHubSpot - CRM with marketing, sales, and service automation.\nSalesforce - Enterprise CRM with advanced analytics and automation.\nZoho CRM - Affordable CRM with productivity integrations.\nBuffer - Social media scheduling and analytics tool.\nHootsuite - Social media management with scheduling and monitoring.\nUpLead - Lead generation with verified email contacts.\nPipedrive - Sales-focused CRM with pipeline management.\nPocus - Product-led growth tool for user onboarding and engagement.\nEndgame - PLG-focused tool for customer success and retention.\nBetterleap - AI-powered outbound recruiting platform for teams.\nMiscellaneous Productivity Tools\nCanva - Graphic design tool for presentations and visuals.\nGrammarly - AI-powered writing assistant for grammar and style.\nTextSniper - OCR tool for extracting text from images and PDFs.\nRydoo - Travel and expense management for businesses.\nHypercontext - Meeting management for productive one-on-ones.\nStack Overflow for Teams - Knowledge-sharing for technical teams.\nSignaturely - Digital signature tool for documents.\nM365 Copilot - AI assistant for Microsoft 365 productivity apps.\nDubsado - Client management and invoicing for freelancers.\nQuickBooks Money - Financial management for small businesses.\nGusto - Payroll and HR management for small businesses.\nWorkona - Browser tab and workspace manager.\nFlyMSG - Text expansion for faster communication.\nCyclopt - Productivity analytics for teams.\nZendesk - Customer service and productivity tools with AI.\nScalefusion - Mobile device management for productivity.\nCensus - Data sync platform for connecting business tools.\nHex - Collaborative data workspace for analysis and visualization.\nRunway - Financial planning and forecasting tool for startups.\nDaydream - Finance management tool with cash flow focus.\nSora - Modern hiring platform with AI-driven candidate matching.\nMosey - Tool for managing global employment and compliance.\n","permalink":"https://aamu.app/blog/posts/all-the-productivity-apps-you-could-think-of-100/","summary":"\u003cp\u003eEven though we know that \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://aamu.app/\" id=\"18234062-2efc-4d8c-9119-6b6086c25f0e\"\u003eAamu.app\u003c/a\u003e is the perfect productivity app, we may be interested to know what else is out there. This is why I’ve compiled this handy list to show you that you don’t actually miss out on anything important, if you choose Aamu.app.\u003c/p\u003e\u003cp\u003eThere are actually tens of thousands of these apps, so no sane person (or even an AI) will ever be able to try them all. But here’s the first hundred and then some.\u003c/p\u003e","title":"All the productivity apps you could think of (100+)"},{"content":" Penpot is integrated with Aamu.app. Let’s see what Penpot is all about.\nPenpot is revolutionizing the design world as a free, open-source design and prototyping platform that brings designers and developers together like never before. Built on open web standards like SVG, CSS, and HTML, Penpot eliminates the traditional handoff struggles, offering a collaborative, intuitive, and powerful tool for creating stunning user interfaces and prototypes. Whether you’re a solo designer, a developer, or part of a large team, Penpot’s feature set is designed to streamline workflows and empower creativity. Let’s dive into what makes Penpot stand out, including the exciting features introduced up to version 2.7.\nCore Features of Penpot1. Seamless Design-to-Code WorkflowPenpot is uniquely designed to bridge the gap between design and development. It expresses designs natively as CSS, SVG, and HTML, allowing developers to access ready-to-use code directly from the Inspect tab. This eliminates the need for complex exports or translations, making handoffs smooth and efficient. Designers can work with layouts that mirror real-world CSS standards, ensuring the final product aligns with their vision.\n2. Flex and Grid LayoutsPenpot’s Flex Layout and CSS Grid Layout (introduced in version 2.0) enable designers to create responsive, adaptive interfaces that behave like real web layouts. Flex Layout works like CSS Flexbox, allowing automatic resizing and alignment, while the CSS Grid Layout (a highlight of version 2.0) lets you distribute elements using rows and columns for precise, developer-friendly designs. These features ensure designs are not only visually appealing but also practical for coding.\n3. Components and Design SystemsPenpot’s robust Components system (revamped in version 2.0) allows teams to create reusable design elements and maintain consistency across projects. You can save components to local or shared libraries, organize them with intuitive naming conventions, and sync them across files. Combined with Design Tokens, Penpot provides a single source of truth for colors, typography, and other design values, streamlining collaboration and scalability.\n4. Interactive PrototypingPenpot empowers you to create rich, interactive prototypes that mimic real product behavior. Set triggers, actions, and transitions (like fade, pull, or push) to simulate user journeys. Shareable prototype links allow stakeholders to test designs, provide feedback, and collaborate in real time, making Penpot a one-stop shop for ideation to validation.\n5. Real-Time CollaborationPenpot’s multiplayer environment allows designers, developers, and stakeholders to work together in real time. Features like comments, notifications, and role-based permissions ensure everyone stays in the loop. You can share designs publicly or privately, customize feedback settings, and integrate stakeholders without worrying about licensing costs.\n6. Open-Source and Deployment FlexibilityAs an open-source tool licensed under the Mozilla Public License 2.0, Penpot is free for all users and fully customizable. You can use Penpot’s cloud service or self-host it using Docker, Kubernetes, or other methods, giving teams control over security and infrastructure. Its open standards ensure zero vendor lock-in, so you own your designs and data.\n7. Typography and Visual Design ToolsPenpot offers a Typography Palette for quick application of consistent text styles, along with tools for creating gradients (linear and radial, with multi-stop support in version 2.7), shadows, blurs, and more. Custom fonts can be uploaded to the dashboard, ensuring brand consistency across projects.\n8. Infinite Canvas and TemplatesPenpot’s infinite canvas provides limitless space to organize designs, from wireframes to high-fidelity UI. The platform offers a variety of templates and libraries (e.g., UI kits, icon sets) to jumpstart projects. You can also contribute your own templates to the vibrant Penpot community.\n9. API and Plugin SupportPenpot integrates seamlessly into development workflows with its API and access tokens, enabling automation and custom integrations. The plugin system (expanded in recent updates) allows teams to build and share custom extensions, enhancing functionality for specific needs.\nWhat’s New in Penpot 2.7?The latest release, version 2.7, builds on Penpot’s strengths with practical enhancements for designers and developers. Here are the key updates:\nMulti-Stop Gradient UI: Version 2.7 introduces an improved gradients interface with support for multi-stop gradients, giving designers more control over complex color transitions.\nFixed Media Asset Handling: A critical bug fix resolves issues with media assets (e.g., fill images), ensuring no broken references in component libraries. A script is provided to correct existing files, improving reliability for teams managing large design systems.\nEnhanced Workspace Features: Updates include improved path editing, better component management, and refined token handling for consistent design systems.\nImproved Sharing and Prototyping: New board presets for modern devices, enhanced prototype sharing for editors and viewers, and a redesigned Invitations page make collaboration smoother.\nPerformance Optimizations: For teams with large databases, version 2.7 offers improved processing speeds by allowing parallel file processing, configurable via the max-jobs setting.\n","permalink":"https://aamu.app/blog/posts/penpot-design-tool-feature-overview/","summary":"\u003cp\u003e\u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://penpot.app/\" id=\"fadb2f75-0c0c-47ea-9bcf-59b3c64c63f3\"\u003ePenpot\u003c/a\u003e is integrated with Aamu.app. Let’s see what Penpot is all about.\u003c/p\u003e\u003cp\u003ePenpot is revolutionizing the design world as a free, open-source design and prototyping platform that brings designers and developers together like never before. Built on open web standards like SVG, CSS, and HTML, Penpot eliminates the traditional handoff struggles, offering a collaborative, intuitive, and powerful tool for creating stunning user interfaces and prototypes. Whether you’re a solo designer, a developer, or part of a large team, Penpot’s feature set is designed to streamline workflows and empower creativity. Let’s dive into what makes Penpot stand out, including the exciting features introduced up to version 2.7.\u003c/p\u003e","title":"Penpot Design Tool - feature overview"},{"content":" Let’s see the Docs main page. It has all the familiar elements:\nProject picker (or all projects)\nAdd new Doc\nDoc box\nSearch\nLet’s create a new doc:\nWe are met with a title and the content area. What else do we need at this stage? Let’s add a title:\nSo, we got a bit more. A project picker, File menu, Publish button, Chat section, tags, current editors.\nHere I need to give a tip, if you like writing with a bigger font size, you can increase the zoom from the File menu or with Ctrl + plus. Bells 🔔 and whistles 🥳 In the content area, you can get more options by typing / (slash). You will see a menu like this:\nThat’s one way to add elements to the doc. Another is to select some text, and a mdnu will appear above the selected text:\nFrom there you can also spice up 🌶️ the text. And since we are got to the topic of spicing up, you can add emojis by typing : (colon). And you can add mentions by typing @.\nFile menuLet’s see what the File menu has for us:\nPage setupFirst we have the Page setup:\nThis is mainly used for printing or saving to PDF, although there is the theme setting for shared docs.\nSnapshotsIn snapshots we see our doc in different stages — a snapshot is created automatically when new content is added. This way you can go back to a certain point in time, it’s your (and your team’s) time machine to the document. View sourceYou can view the source in HTML or markdown — and update the document from the source view.\nShare docNormally the document is private. You can make a version of it public (as HTML and as PDF).\nZoomZooming can be done from the File menu and with Ctrl + plus and Ctrl + minus.\nPublishIf the doc is in draft state (only the creator sees it), you can publish it so that the whole team sees it.\nPrintYou can print the doc from File menu or from the browser’s menus.\nCollaborationAs we noticed, the top bar had current editors. This is to show, who are currently editing the document. The document can be edited by your whole team at the same time!\n","permalink":"https://aamu.app/blog/posts/aamuapp-docs-feature-overview/","summary":"\u003cp\u003eLet’s see the Docs main page. It has all the familiar elements:\u003c/p\u003e\u003cimg src=\"8237673974329216_image.png\" style=\"width: auto;\" id=\"86c169de-1d5f-49ed-b34e-7e56df58aa01\"\u003e\u003col\u003e\u003cli\u003e\u003cp\u003eProject picker (or all projects)\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eAdd new Doc\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eDoc box\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eSearch\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eLet’s create a new doc:\u003c/p\u003e\u003cimg src=\"6884837054787363_image.png\" style=\"width: auto;\" id=\"da6d07c7-23eb-4f23-9a50-b3bff1b90bd9\"\u003e\u003cp\u003eWe are met with a title and the content area. What else do we need at this stage? Let’s add a title:\u003c/p\u003e\u003cimg src=\"733699129968084_image.png\" style=\"width: auto;\" id=\"3abb81fc-ce18-44be-8788-4fa49ae542cf\"\u003e\u003cp\u003eSo, we got a bit more. A project picker, File menu, \u003cem\u003ePublish\u003c/em\u003e button, Chat section, tags, current editors.\u003c/p\u003e","title":"Aamu.app Docs - feature overview"},{"content":" The modern digital workplace is a mosaic of specialized applications. Teams often find themselves subscribing to and jumping between Notion for documentation, Jira or Linear for issue tracking, Slack or Microsoft Teams for real-time communication, Calendly for scheduling, and a host of other tools for specific needs like design, forms, or customer support. While each tool excels in its niche, this fragmented approach often leads to \"tool fatigue,\" constant context switching, spiraling subscription costs, and a general sense of disorganization.\nWhat if there was a comprehensive platform that could consolidate these disparate functionalities into a single, cohesive, and intuitive environment? What if this platform not only replaced these tools but also made them work better together? This is precisely where Aamu.app comes in, offering itself as a powerful, integrated alternative designed to simplify your workflow and enhance collaboration.\nAamu.app is built on the philosophy that productivity shouldn't be a puzzle of disconnected pieces. By bringing together critical team operations under one roof, Aamu.app helps you cut down on the chaos of using a bunch of different tools, allowing your team to stop juggling and start truly getting things done.\nAamu.app vs. Notion, Confluence, \u0026 Airtable: Your Integrated Workspace \u0026 Database Powerhouse Notion and Confluence are renowned for their flexible workspaces, robust documentation, and knowledge management capabilities, while Airtable offers a powerful hybrid spreadsheet-database solution. Aamu.app offers similar core capabilities, but with a deeply integrated approach that compounds their usefulness:\nCollaborative Documents and Knowledge Bases (replacing Notion, Confluence): Aamu.app’s Docs feature provides a dynamic, real-time environment for collaborative document editing. Imagine co-creating project plans, meeting notes, or internal wikis where every team member sees updates instantly. This is more than just a place for notes; it's a living knowledge base where your team can build, share, and refine information without the \"which version is this?\" confusion. This very blog post you are reading has been written and stored using Aamu.app's Docs, showcasing its native capability. Versatile Databases for Any Need (replacing Notion, Airtable, Google Sheets): At the core of Aamu.app’s data management is its incredibly flexible database system. You can create custom databases tailored to virtually any organizational need, from simple contact lists to complex CRM systems, inventory management, or even detailed project tracking. As demonstrated by our official blog, which is powered by an Aamu.app database, it functions seamlessly as a \"Headless CMS.\" This means your structured data is centralized and accessible for various applications. Powerful GraphQL API for Integration: For developers and those needing advanced data interaction, Aamu.app provides a robust GraphQL API. This allows you to programmatically query and mutate your database data with precision and efficiency. Whether you're fetching specific records for a custom dashboard or updating entries from an external system, the GraphQL API ensures secure and flexible data flow. This power enables advanced use cases like building custom single-page applications that leverage your Aamu.app data, directly from your browser or server. Integrated Forms for Data Collection (replacing Google Forms, Typeform): Collecting information is effortless with Aamu.app’s built-in Form Builder. You can design custom survey forms, feedback questionnaires, or contact forms with ease. The best part? All form submissions are automatically captured and stored directly into your Aamu.app databases, eliminating the need for third-party form solutions and ensuring all your collected data lives in one central, actionable location. Aamu.app vs. Jira, Linear, Asana, Trello, Monday.com: Streamlined Task \u0026 Project Management Jira, Linear, Asana, Trello, and Monday.com are leading solutions for agile project management, issue tracking, and task organization. Aamu.app’s Tasks feature provides comprehensive functionality that not only rivals these dedicated tools but also integrates deeply with other Aamu.app features:\nMultiple Flexible Task Views: Aamu.app understands that different tasks and workflows demand different perspectives. Kanban Board (Taskboard): Visualize your workflow and track progress with a dynamic kanban board. Easily drag-and-drop tasks between customizable states (e.g., To Do, In Progress, Review, Done), providing a clear overview of work distribution and bottlenecks. You can define unique task states for each project, ensuring the board perfectly mirrors your team's process. List View: For quick overviews, bulk actions, or simple task lists, the traditional list view offers a clean and efficient way to manage your tasks. Calendar View: Stay on top of deadlines and scheduled events with the integrated calendar view. Only tasks with defined deadlines are displayed, providing a focused look at upcoming commitments. Comprehensive Task Details \u0026 Collaboration: Each task in Aamu.app is a rich container for all relevant information. You can assign tasks to specific team members, set clear deadlines, categorize them with custom tags, and utilize custom fields unique to each project for tailored data capture. The integrated comment section facilitates internal discussions, ensuring all context and decisions related to a task are kept in one place. Additionally, a built-in time tracker allows for precise recording of effort, ideal for billing or productivity analysis. Intelligent Automations for Workflow Efficiency: Aamu.app elevates task management beyond simple tracking with powerful Database Automations. Imagine the efficiency gained when a new customer inquiry submitted via a form automatically creates a \"follow-up\" task for your sales team, or an inbound helpdesk email triggers a new \"issue resolution\" task. This deep integration links customer interactions directly to actionable items, reducing manual effort and improving response times. Seamless Calendar Sync: Tasks with deadlines can be effortlessly synced with your Google Calendar, ensuring that your personal and professional schedules remain aligned. This bi-directional sync means you'll always have your important milestones visible in your preferred calendar application. Aamu.app vs. Slack, Microsoft Teams, Discord: Unified Communication \u0026 Customer Support Hub Slack, Microsoft Teams, and Discord are synonymous with modern team communication, facilitating real-time chat and collaboration. Aamu.app integrates robust communication features, alongside powerful customer support capabilities, all designed to reduce context switching and keep everyone truly connected:\nIntegrated Team Chat \u0026 Posts: Aamu.app provides all the essential internal communication functionalities you expect, including direct messages and group chats for real-time discussions. The \"posts\" feature is perfect for broader team announcements, updates, or sharing important news. All communications are centralized, making it easy to search historical context and keep discussions linked to specific projects or tasks. Native Video Meetings (replacing Zoom, Google Meet): Powered by LiveKit, Aamu.app's Video Meetings feature delivers a secure, scalable, and fully integrated solution for team calls. With familiar features like screen sharing (on desktop) and in-call chat, it eliminates the need for separate video conferencing subscriptions. What's more, meetings can be created directly from tasks, or even automatically generated via Aamu.app's event calendar, creating a seamless workflow from booking to meeting. Comprehensive Helpdesk (replacing Zendesk, Intercom): For external communication and customer interactions, Aamu.app's Helpdesk provides a powerful unified inbox. Email Ticketing: As detailed in Part 1 of our Helpdesk setup, you can easily configure a dedicated support email address for your project. All inbound emails are automatically converted into traceable tickets, allowing your team to manage customer inquiries efficiently. Replies are sent directly from Aamu.app, maintaining a consistent customer experience. Live Chat Widget: Extend your support directly to your website with Aamu.app’s customizable live chat widget. This widget intelligently adapts its behavior: if no support agent is online, it can function as an email-sending form, ensuring no query goes unanswered. When agents are available, it becomes a real-time chat interface. All live chat conversations are automatically converted into helpdesk tickets once the chat is complete, ensuring a complete historical record of all customer interactions. Seamless Workflow: Within the Helpdesk, you can easily track ticket statuses, assign agents, engage in internal team chats about specific tickets, and critically, create new tasks directly from customer requests. This means a customer's question can instantly become an actionable item for your product or engineering team, ensuring nothing falls through the cracks. Aamu.app vs. Calendly: Integrated Scheduling \u0026 Event Booking Calendly simplifies appointment scheduling by allowing others to book time slots based on your availability. Aamu.app offers a direct and integrated alternative, eliminating the need for a separate scheduling tool and its associated costs:\nPersonalized Event Calendars: As highlighted in \"Aamu.app as a Calendly alternative,\" you can easily set up public event booking links. These links allow anyone to view your availability and schedule meetings directly into your calendar. Direct Video Meeting Integration: Unlike Calendly, which often requires integration with a separate video conferencing tool, Aamu.app’s event calendar is inherently tied to its own video meeting feature. When someone books a time, a new Aamu.app meeting is automatically created, complete with a unique meeting link, ready for immediate use. Automated Task Creation: Every booked event can automatically generate a new task within your Aamu.app project. This ensures that scheduled meetings are immediately recognized as actionable items, allowing for preparatory work, follow-ups, and seamless integration into your project management workflow. Aamu.app vs. Figma (with Penpot): Integrated Design Collaboration Figma has become the industry standard for collaborative design. While Aamu.app doesn't aim to *replace* a dedicated, high-fidelity design tool for professional designers, it offers an incredibly valuable integrated solution for many teams:\nBuilt-in Collaborative Design with Penpot 2.x: As noted in our introduction, Aamu.app has Penpot 2.x built right in. Penpot is a powerful, open-source design and prototyping platform that serves as a fantastic alternative to tools like Figma for many use cases. This means your design work can happen directly within your Aamu.app workspace, alongside your documents, tasks, and communications. Seamless Integration within Documents: Imagine embedding design mockups or wireframes directly into your project requirement documents or product specifications, all within the same Aamu.app interface. This reduces the friction of context switching between design tools and documentation platforms, ensuring that design discussions and iterations are closely tied to the broader project context. For teams that don't need the absolute bleeding edge of professional design tools, or those who value an integrated, cohesive workflow, this built-in solution is a game-changer. The Aamu.app Unifying Advantage: Beyond Feature Parity What truly distinguishes Aamu.app as an alternative to this long list of individual tools is its foundational commitment to an all-in-one, integrated experience:\nUnified User Interface: The most immediate benefit is the elimination of \"tab hell.\" No more bouncing between countless browser tabs or applications. Aamu.app provides one cohesive, intuitive interface for all your team's work, reducing cognitive load and boosting focus. True Real-Time Collaboration: Every feature and all data within Aamu.app operates in real-time. Whether you're co-editing a document, updating a task status, or participating in a live chat, every change is instantly visible to all relevant users. This ensures everyone is always working with the most up-to-date information, eliminating version control nightmares and communication delays. Designed for Efficiency: Aamu.app is meticulously designed for maximum efficiency. Its interface is extensively navigable using just the keyboard, allowing power users to speed through tasks and workflows without needing to constantly switch to the mouse. This focus on intuitive shortcuts enhances productivity for everyday use. Unlocking Compounding Usefulness: The true power of Aamu.app lies in how its features interoperate. It's not just a collection of separate tools; it's an ecosystem where each component enhances the others. A customer's helpdesk ticket can become a task, which can then have a video meeting scheduled for it, with all notes captured in a linked document, and all data stored in a central database. This \"compounding usefulness\" is something disparate tools simply cannot replicate. Significant Cost Efficiency: By consolidating the functionalities of multiple specialized SaaS tools into one platform, Aamu.app dramatically reduces your subscription overhead. Furthermore, our unique \"pay what you want\" pricing model aims to be fair and accessible, making a comprehensive productivity suite available to teams of all sizes and budgets. Reduced Tool Sprawl \u0026 Improved Onboarding: Say goodbye to the administrative burden of managing multiple accounts, integrations, and permissions across different platforms. Aamu.app simplifies onboarding for new team members and reduces the learning curve, as they only need to master one integrated system. This clarity leads to less friction and more productive work. Long-Term Reliability and Trust: As the founder, my commitment to quality and trust is built on years of experience, including a previous venture, Embed.rocks, that has reliably served paying customers since 2016. Furthermore, Aamu.app is designed with low running costs, significantly mitigating the risk of financial instability and ensuring its longevity as a dependable tool for your team. Ready to Simplify Your Workflow? If your team is struggling with tool fatigue, fragmented workflows, and escalating software costs, Aamu.app offers a compelling and comprehensive alternative. It's designed to bring clarity, efficiency, and seamless collaboration back to your daily operations, allowing your team to focus on innovation and getting their best work done.\nExplore Aamu.app today and experience the difference a truly all-in-one productivity platform can make.\n","permalink":"https://aamu.app/blog/posts/aamuapp-as-an-alternative-to-notion-jira-slack-linear-and-more/","summary":"\u003cp\u003eThe modern digital workplace is a mosaic of specialized applications. Teams often find themselves subscribing to and jumping between Notion for documentation, Jira or Linear for issue tracking, Slack or Microsoft Teams for real-time communication, Calendly for scheduling, and a host of other tools for specific needs like design, forms, or customer support. While each tool excels in its niche, this fragmented approach often leads to \"tool fatigue,\" constant context switching, spiraling subscription costs, and a general sense of disorganization.\u003c/p\u003e","title":"Aamu.app as an Alternative to Notion, Jira, Slack, Linear, and More"},{"content":" Earlier we configured helpdesk for emails and livechat, now is the time to take a general look at how to use the helpdesk. Here is the overall view of it:\nProject picker (which we see in every major section).\nSupport’s email address (if email is configured).\nSince we have Tickets tab selected, we see the ticket subsections here.\nTabs - now Tickets selected.\nFiltering menu.\nTicket “box” — shows one ticket (usually email). We see these boxes everywhere in Aamu.app, every major feature includes one or more.\nEnable or disable livechat (if livechat is configured). When this is disabled, the livechat icon will show as an email ✉️ icon (for sending an email) and when this is enabled, the livechat icon will show a chat 🗨️ icon.\nEmail ticketsWhen the ticket box is clicked, and the ticket is an email, you will see something like this:\nTitle\nTicket status\nWho the ticket is assigned to — when you reply to an email, the ticket will be assigned to you\nInternal chat about the ticket — sometimes you need to talk about with your team\n“Show images” — like in the emails, you may not want to show all images automatically, as it may not be safe\nIf this is spam, you can block the sender and this email\nIn the “more menu” (three dots), there is one useful thing in particular:\nIt’s the Create task. As it sometimes happens, a customer request may spark some internal chain of events, we could require creating a task. This is for those cases.\nChat ticketsLet’s see how to handle livechat tickets.\nFirst you would enable Chat:\nThen you can see that on your site the chat icon is active:\nLet’s click it:\nSo, now we are waiting for someone to answer us.\nAt Aamu.app side you will see a notification:\nIf we click the notification, we will see the Chat box:\nHere we see, that Anonymous is wanting to chat and the country flag he/she is from. Let’s click the chat box. A chatting dialog appears in the bottom right of the screen:\nWhen you type something and press Enter or click the send button the chat session initiates:\nAnd the customer sees:\nAfter chatting and ending the chat (either party can do it), there is still the opportunity to leave feedback:\nAfter the chat is done, there will be a closed ticket created from it:\nThat’s itHandling tickets isn’t very complicated.\n","permalink":"https://aamu.app/blog/posts/aamuapp-helpdesk-feature-overview/","summary":"\u003cp\u003eEarlier we configured helpdesk for \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://aamu.app/blog/posts/setting-up-helpdesk-in-aamuapp-part-1-emails/\" id=\"b7076d01-a97f-427f-ba60-5561e21abf60\"\u003eemails\u003c/a\u003e and \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://aamu.app/blog/posts/setting-up-helpdesk-in-aamuapp-part-2-livechat/\" id=\"219ba041-b7e7-439e-9df6-1f7fa8ba6469\"\u003elivechat\u003c/a\u003e, now is the time to take a general look at how to use the helpdesk. Here is the overall view of it:\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cimg src=\"5597285380243704_image.png\" style=\"width: auto;\" id=\"1238efe4-d6d5-429f-98cd-13eefbc9d601\"\u003e\u003col\u003e\u003cli\u003e\u003cp\u003eProject picker (which we see in every major section).\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eSupport’s email address (if email is configured).\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eSince we have \u003cem\u003eTickets\u003c/em\u003e tab selected, we see the ticket subsections here.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eTabs - now \u003cem\u003eTickets\u003c/em\u003e selected.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eFiltering menu.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eTicket “box” — shows one ticket (usually email). We see these boxes everywhere in Aamu.app, every major feature includes one or more.\u003c/p\u003e","title":"Aamu.app Helpdesk - feature overview"},{"content":" Let’s go through the Aamu.app Video Meetings.\nWe are using LiveKit, which is a modern, open-source, scalable video and audio platform. Our video calling feature resembles Zoom and Microsoft Teams, except that it is of course integrated well with Aamu.app in every way.\nAs you have probably come to expect, the main section of Meetings resembles every other section in Aamu.app:\nYou have the familiar project picker, the blue plus button for creating a new item (meeting in this case) and tabs (upcoming, past).\nLet’s create a Meeting:\nThere will be a default name suggested, you can change this, or you can just accept it. At this point the Meeting will be in draft mode. Let’s accept it:\nWe need a starting time for the meeting, let’s add that:\nNow as we have the starting time, we can do something more: we can invite people (you as the creator are already invited) and we can join the meeting.\nYou can invite people from your Aamu.app team or people from outside the team with an email address only.\nWhen you invite new people, they get the notification email of it automatically, but you can send the notifications again in case you need it. Notification emails will have the joining link.\nLet’s join it (with our mobile phone):\nWe are using the back camera for now.\nIt’s basically a simple video calling app. There is a chat and a screen sharing feature (on desktop).\nIntegration with Aamu.appAt the moment there are two other ways to create a meeting what I just showed:\nWhen you are creating a task: if you set a starting and ending date for it, there is an option to create a video meeting for it.\nIn the event calendar.\nIn the future there will be other ways that you can create a meeting — like with Database Automations.\n","permalink":"https://aamu.app/blog/posts/video-meetings-feature-overview/","summary":"\u003cp\u003eLet’s go through the Aamu.app Video Meetings.\u003c/p\u003e\u003cp\u003eWe are using \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://livekit.io/\" id=\"4d060849-1312-4f49-8381-c585fedf606b\"\u003eLiveKit\u003c/a\u003e, which is a modern, open-source, scalable video and audio platform. Our video calling feature resembles Zoom and Microsoft Teams, except that it is of course integrated well with Aamu.app in every way.\u003c/p\u003e\u003cp\u003eAs you have probably come to expect, the main section of Meetings resembles every other section in Aamu.app:\u003c/p\u003e\u003cimg src=\"8990142467865017_image.png\" style=\"width: auto;\" id=\"f7af5341-a941-457c-b1dc-2883f68af793\"\u003e\u003cp\u003eYou have the familiar project picker, the blue plus button for creating a new item (meeting in this case) and tabs (upcoming, past).\u003c/p\u003e","title":"Video Meetings - feature overview"},{"content":" Let’s go through the features of Aamu.app Tasks. Here is the general overview with labels which we go through next:\nSearch. Will search the currently selected project (or all projects if that is selected).\nThe currently selected project — or all projects combined.\nCreate new task.\nSort tasks menu.\nFilter tasks menu.\nView selector (list, kanban, calendar).\nCreate new task quickly in one-line input box.\nTask box, showing one task’s details. The green corner is the task status, which is clickable, and closes the task, when clicked. This status indicator is also in many other item types accross Aamu.app.\nA checkbox to select this task. Also the keyboard shortcut . (dot) will select/unselect the currently active task (denoted by the blue outline). You can perform actions to selected tasks (like close all of them and more).\nSelected tab (Active tasks). There will also be Upcoming for tasks with deadlines.\nMore tabs, like completed tasks, archived tasks.\nLet’s take a look at the different views. List we already saw (above), there are also the kanban board (which we call Taskboard) and the calendar:\nKanbanTaskboard looks like this:\nThere is a lane/column for each possible task states. BTW, this view is also where you can add more task states, at the moment:\nWhat does it mean when it says “to the left of this”? The leftmost lane (or state) will be the default, when a new task is created. Initially, when you create a new project, there are only two states, active (green) and closed (red). Each project can have its own task states. CalendarHere’s what the calendar looks like:\nAs we can see, there isn’t a lot going on — my calendar looks empty (like it actually is). Only tasks which have a deadline defined are shown in the calendar.\nIf your calendar looks empty, you can sync the project with your Google Calendar:\nNote that only project owners can sync their Google Calendar. So, if you want to do that, you can create a project of your own, and you will become that project’s owner automatically. Note that you need to be an admin to create projects. You can limit the visibility of your projects by adding (or not adding) members to it. Only the project members will see the project.\nTask editing \u0026amp; detailsLet’s look at task details (when creating a new task or editing a task):\nThe project the task is in.\nTask’s state (you can add more states in Taskboard view).\nStar the task (to make it more important). Everybody will see the star.\nWith “start” you can start time tracking for yourself, usually when you are doing the task. If you need time tracking (for billing for example), this is for you.\nEdit task content (title, body). You can edit the title and body by clicking the place you want to edit, but in case you need a separate button, here it is.\nTask’s title (and body below it).\nTask’s comments (and other notifications).\nSetting the deadline. Assigning the task to specific members. By default the task is assigned to its creator automatically (if you don’t want this, you need to just click x for remove user).\nTask’s tags.\nCustom fields. Every project has its own custom fields for tasks.\n","permalink":"https://aamu.app/blog/posts/aamuapp-tasks-feature-overview/","summary":"\u003cp\u003eLet’s go through the features of Aamu.app Tasks. Here is the general overview with labels which we go through next:\u003c/p\u003e\u003cimg src=\"311953286717032_image.png\" style=\"width: auto;\" id=\"81867541-a77c-4184-a502-9928125b61b1\"\u003e\u003col\u003e\u003cli\u003e\u003cp\u003eSearch. Will search the currently selected project (or all projects if that is selected).\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eThe currently selected project — or all projects combined.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eCreate new task.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eSort tasks menu.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eFilter tasks menu.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eView selector (list, kanban, calendar).\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eCreate new task quickly in one-line input box.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eTask box, showing one task’s details. The green corner is the task status, which is clickable, and closes the task, when clicked. This status indicator is also in many other item types accross Aamu.app.\u003c/p\u003e","title":"Aamu.app Tasks - feature overview"},{"content":" Earlier we created the contact form. Let’s spice it up a little bit — let’s create an automation for it! Since we might want to get an email notification when someone sends us a message through the contact form, let’s do that. Let’s create an automation that sends an email to us.\nWe start by going into the contact form database and in the 3 dots menu you will see “Automations”.\nAnd you will see an empty page of Automations. Let’s create one:\nNext you will see a few things, which I will explain here:\nThe Automation will be triggered by some event. At the moment, only Row inserted is supported.\nTriggering table. We need to specify, which table triggers the Automation.\nBindings. When the row is inserted, it has some data, and the different fields are named by some human-readable name which tells what the data is about. Here are those names turned into lowercase character strings, wrapped in {{}}. You can use these bindings in the email that you send out. For example, the {{name}} means the name that the person gave and {{email}} is his/her email address.\nPublishing. When you are ready to take this Automation into use, set this to Public.\nAdd action. Your automation needs actions — at least one. Add it here.\nActionsYour automation needs actions. Currently, two types of actions are supported: Sending an email\nCreating a task\nAnd email needs a sender. And we can only use a sender that we have specified by ourselves. So, in case you haven’t set up Emails yet, now would be a good time to do that.\nHere are the email accounts that I have set up, and I can choose from one of them:\nNext we get to the main point — writing the email template that will be used for sending.\nHere is the screen for writing email templates:\nThe Bindings are explained there again — how they work. You can use them in the body section of the email. And the actual bindings you saw in previous section.\nThe To field would be the email where you want the email to arrive at. The From field was set earlier.\nYou can write a template like this, for example:\nSubject: Contact form submission\nTo: youraddress@gmail.com\nBody:\nHi me! Someone just filled our contact form with this information: Name: {{name}} Email: {{email}} Message: {{message}}Click Save template.\nAt this point just change the Publishing to Public. When you do that, you can test the Automation:\nThen just start waiting for the emails to pour in!\n","permalink":"https://aamu.app/blog/posts/database-automations-with-aamuapp/","summary":"\u003cp\u003eEarlier we created the contact form. Let’s spice it up a little bit — let’s create an automation for it! \u003c/p\u003e\u003cp\u003eSince we might want to get an email notification when someone sends us a message through the contact form, let’s do that. Let’s create an automation that sends an email to us.\u003c/p\u003e\u003cp\u003eWe start by going into the contact form database and in the 3 dots menu you will see “Automations”.\u003c/p\u003e","title":"Database automations with Aamu.app"},{"content":" Let’s see how we can use Aamu.app’s Form Builder to create survey forms. First we go to Forms section and create an empty form:\nWhich looks like this:\nStart by adding the Form title and Description, if you so choose.\nAfter which you can start adding form fields.\nText answer and Choice is probably the most common. Let’s add a Choice:\nWith Choice, you have three different ones: radio buttons (select one from many), dropdown box (select one from many) and checkboxes (select many from many). Here we have radio buttons, and it looks like this as the final form:\nLet’s add some data (fill the form and Submit it), then look at the Responses page:\nYou get a nice graphic of the answers. You can see the detailed data in Databases:\nIn Form settings you can set all kinds of useful behavior, like a friendly URL, a custom thank-you page or custom CSS:\nForms and DatabasesSince each form submission creates a database entry, all the features, that are available for databases, are also available for form data. One particularly useful feature may be Database automations — which means that when a new database row (form submission) is added, you can define different actions for it. One action may be to send an email, another may be to create a Task.\nWe will look at Database automations next!\n","permalink":"https://aamu.app/blog/posts/creating-survey-forms-with-aamuapp-form-builder/","summary":"\u003cp\u003eLet’s see how we can use Aamu.app’s Form Builder to create survey forms. \u003c/p\u003e\u003cp\u003eFirst we go to Forms section and create an empty form:\u003c/p\u003e\u003cimg src=\"1573918764651112_image.png\" style=\"width: auto;\" id=\"b96036d7-5971-4959-9e86-40c56ae229a0\"\u003e\u003cp\u003eWhich looks like this:\u003c/p\u003e\u003cimg src=\"8626329798784120_image.png\" style=\"width: auto;\" id=\"f3c3b3a5-a7fe-4333-8e83-95a3ea8c27fa\"\u003e\u003cp\u003eStart by adding the Form title and Description, if you so choose.\u003c/p\u003e\u003cp\u003eAfter which you can start adding form fields.\u003c/p\u003e\u003cimg src=\"2067465486224737_image.png\" style=\"width: auto;\" id=\"c3135cc4-4fe7-48a7-b726-9f19eae2b470\"\u003e\u003cp\u003eText answer and Choice is probably the most common. Let’s add a Choice:\u003c/p\u003e\u003cimg src=\"52041902339365_image.png\" style=\"width: auto;\" id=\"6654df55-1427-4f6b-af40-db7ca4a13893\"\u003e\u003cp\u003eWith Choice, you have three different ones: radio buttons (select one from many), dropdown box (select one from many) and checkboxes (select many from many). Here we have radio buttons, and it looks like this as the final form:\u003c/p\u003e","title":"Creating survey forms with Aamu.app Form Builder"},{"content":" In Helpdesk, there is also a Livechat which you can add to your website. Although it says “chat”, it can also handle emails, when there is no support agent answering to chat requests. Let set that up now.\nFirst you would add users to the Helpdesk project at Projects ➡️ Helpdesk ➡️, like before when we set up the emails for Helpdesk. Only those users will be able to access the Helpdesk project.\nThen, to set the Livechat, you would do it at Projects ➡️ Helpdesk ➡️ Livechat:\nLivechat translationsIn the settigns for Livechat, there are some texts, which you can translate to your needs. You can basically translate everything that appear in the Livechat widget, so you don’t have to show English on a non-English site.\nLivechat embed codeOn the settings page, at the bottom, there is the embed code, which you would put to your website. So, just copy-paste the code to your site, and you should be all set. The code looks like this:\n\u0026lt;script defer src=\"https://ilkkah.aamu.app/livechat.js\"\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;aamu-livechat data-username=\"\" data-useremail=\"\" data-host=\"ilkkah\" data-pid=\"ba09173eaddc06b9c88423723dd266a4\"\u0026gt;\u0026lt;/aamu-livechat\u0026gt;There are a couple of things you can set if you need more control. On sites where people log in, you can set the username and/or email address for each user before they click the chat widget. This is optional, but will let the Helpdesk know exactly who you are talking with.\nAfter this is done, you should see this in the bottom right corner of your site:\nThat’s the Livechat widget. At the moment it shows the Email icon, which means that the widget will function as an email-sending widget:\nYou can control the widget’s behavior at your Aamu.app site:\nWhen you go to the Helpdesk project, there is an option to enable or disable the chat functionality of the widget. If you want to be available for chatting, you would turn that on, and the widget changes the appearance:\nNow, as you see, the chat widget shows a chat bubble — it will be used for chatting.\nWhen someone clicks that, it will show a waiting line, until you accept the chat request:\nAt this point you will see a notification in the right-hand navigation bar:\nYou can also see the incoming chats in Helpdesk ➡️ Chats ➡️ waiting:\nYou will see the country flag where the chat is coming from and the user’s name. Normally it will be Anonymous, but in case you used an authenticated chat, you will see the user’s real name,\nSo., just click the chat and start chatting. A Helpdesk ticket will be created after the chat is done, and the chat will be attached to that ticket. That way you can keep all the issues in the same place, no matter if they come through the email or chat.\n","permalink":"https://aamu.app/blog/posts/setting-up-helpdesk-in-aamuapp-part-2-livechat/","summary":"\u003cp\u003eIn Helpdesk, there is also a Livechat which you can add to your website. Although it says “chat”, it can also handle emails, when there is no support agent answering to chat requests. Let set that up now.\u003c/p\u003e\u003cp\u003eFirst you would add users to the Helpdesk project at Projects \u003cspan data-node=\"emoji\" data-emoji=\"➡️\" data-annotation=\"right arrow\" style=\"user-select: text; font-family: \u0026quot;Twemoji Mozilla\u0026quot;, \u0026quot;Apple Color Emoji\u0026quot;, \u0026quot;Segoe UI Emoji\u0026quot;, \u0026quot;Segoe UI Symbol\u0026quot;, \u0026quot;Noto Color Emoji\u0026quot;, \u0026quot;EmojiOne Color\u0026quot;, \u0026quot;Android Emoji\u0026quot;, sans-serif;\"\u003e\u003cimg alt=\"right arrow\" style=\"display: none; width: 1em; height: 1em;\"\u003e\u003cspan role=\"img\" aria-label=\"right arrow\" style=\"display: inline-block;\"\u003e➡️\u003c/span\u003e\u003c/span\u003e Helpdesk \u003cspan data-node=\"emoji\" data-emoji=\"➡️\" data-annotation=\"right arrow\" style=\"user-select: text; font-family: \u0026quot;Twemoji Mozilla\u0026quot;, \u0026quot;Apple Color Emoji\u0026quot;, \u0026quot;Segoe UI Emoji\u0026quot;, \u0026quot;Segoe UI Symbol\u0026quot;, \u0026quot;Noto Color Emoji\u0026quot;, \u0026quot;EmojiOne Color\u0026quot;, \u0026quot;Android Emoji\u0026quot;, sans-serif;\"\u003e\u003cimg alt=\"right arrow\" style=\"display: none; width: 1em; height: 1em;\"\u003e\u003cspan role=\"img\" aria-label=\"right arrow\" style=\"display: inline-block;\"\u003e➡️\u003c/span\u003e\u003c/span\u003e, like before when we set up the emails for Helpdesk. Only those users will be able to access the Helpdesk project.\u003c/p\u003e","title":"Setting up Helpdesk in Aamu.app - Part 2, livechat"},{"content":" This time, let’s setup Helpdesk.\nWe are going to use emails as the Helpdesk “route” here — people will contact us through the email. For emails, we need a domain. We covered domain setup earlier in the Emails section here. So, go read that first and set up your email domain with those instructions.\nAfter that we are going to set up the Helpdesk, which continues in Project settings. UsersFirst, we are going to add some users to our Helpdesk project. Only those users will be able to access the Helpdesk project. Do it here:\nIn Helpdesk ➡️ Users you will be able to add users to your Helpdesk project.\nEmailsThen, let’s set up the emails for our Helpdesk. Going to the right tab, it looks similar to what we saw earlier when setting up emails in general. You would attach a domain to this project:\nLet’s attach our kansalaiskeskustelu.fi domain to our Helpdesk project, and we see this:\nWe will have only one email account per a Helpdesk project, and we will set up the email account here, in Project settings. So, let’s just fill in the blanks and click “Set…”.\nAfter that you can go to the Helpdesk section, and start waiting for the emails to come in. 🤓 ","permalink":"https://aamu.app/blog/posts/setting-up-helpdesk-in-aamuapp-part-1-emails/","summary":"\u003cp\u003eThis time, let’s setup Helpdesk.\u003c/p\u003e\u003cp\u003eWe are going to use emails as the Helpdesk “route” here — people will contact us through the email. \u003c/p\u003e\u003cp\u003eFor emails, we need a domain. We covered domain setup earlier in the \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://aamu.app/blog/posts/setting-up-emails-in-aamuapp/\" id=\"eb6e4907-75f1-4b0e-8083-f09c15d53128\"\u003eEmails section here\u003c/a\u003e. So, go read that first and set up your email domain with those instructions.\u003c/p\u003e\u003cp\u003eAfter that we are going to set up the Helpdesk, which continues in Project settings. \u003c/p\u003e","title":"Setting up Helpdesk in Aamu.app - Part 1, emails"},{"content":" Let’s tackle a bigger subject — emails. Due to the nature of the game, it involves some pretty techy stuff, domains and other scary things. This is the same for Helpdesk, which shares those domain settings with Emails.\nEmail domainEmails work so that one project can hold one Email domain. This project can hold one email account for each project user. Those email accounts are personal — others won’t be able to see your email account’s emails or contacts.\nEmail domains are created in Team settings. First you need to add an email domain. Let’s do that now.\nGo to Profile icon ➡️ Team ➡️ Email domains. To add a new domain, click the plus button:\nAnd proceed to add the domain. Note that you can choose between Aamu.app’s email (IMAP) server and a third party IMAP server. So, that’s some extra flexibility. Let’s use Aamu.app’s IMAP server.\nAfter we have added it, we get to the screen where the domain will be verified through the DNS data. For this you need to get to the site that holds the DNS data for your domain, for example Cloudflare. The data that you should enter into your domain’s DNS data looks like this:\nThere are four fields to set. So just set them, copy-paste from the screen to the site that holds your site’s DNS data. After clicking Verify you should hopefully see this:\nIf the verification didn’t succeed, just try again until it does.\nAttaching the domain to the projectAfter the hard part, DNS verification is done, there is still one more step until we get to create our mailboxes. This should be simple enough. In the Project settings, i.e. Projects ➡️ Your Awesome Project ➡️ Email you can attach the domain you just added to the project where you want to use it.\nMailboxesAfter that we get to adding the mailboxes for those who want to have a mailbox in this domain. Each user will create his/her mailbox and that will happen in when you go from the site’s main navigation (right-hand side) section EMAILS ➡️ select your project ➡️ Email settings:\nSo, here you will choose your email address and your full name. After that you will be able to set something more: the email footer, which will be appended to the emails you send. And also Tabs, which are like folders.\nDone!After this the email is set, you can receive and send emails.\nThere are some features that we hope you will like in the email client, but you will find those by your own.\n","permalink":"https://aamu.app/blog/posts/setting-up-emails-in-aamuapp/","summary":"\u003cp\u003eLet’s tackle a bigger subject — emails. Due to the nature of the game, it involves some pretty techy stuff, domains and other scary things. This is the same for Helpdesk, which shares those domain settings with Emails.\u003c/p\u003e\u003ch2\u003eEmail domain\u003c/h2\u003e\u003cp\u003eEmails work so that one project can hold one \u003cem\u003eEmail domain\u003c/em\u003e. This project can hold one email account for each project user. Those email accounts are personal — others won’t be able to see your email account’s emails or contacts.\u003c/p\u003e","title":"Setting up Emails in Aamu.app"},{"content":" Did you know that you can use Aamu.app as a Calendly alternative? Well, you can, and more, since you can tie it up with Aamu.app’s video meetings. Here’s how.\nFirst, go to: Project settings → Tasks → Event Booking\nThere you will see a host of settings. Set them as you would like — there are a lot of configuration options. In the end, what you want is the link to the event calendar. It looks like this: https://ilkkah.aamu.app/book-event/1700500094527/15-minute-meeting\nYou can use that link to pass it to anyone who you would like to invite into the meeting. So, copy the link, and send it all the people you think might want to have meetings with you!\nWhat you will find in the URL, looks like this:\nSo, it’s a basic event calendar, with each hour separated and weekends (or unavailable days) grayed out. From each “hour” you get a list of available times to choose from.\nUser’s time zone is pre-selected and visible, since when people are selecting times from a calendar, the time zone matters. The event calendar also shows the type of meeting, which you can set in the settings. Video meeting here.\nNext you will enter your contact details:\nAnd in the next screen everything is done:\nAt this point you should see a new task in Tasks listing:\nAlso, a new Meeting is created, which you can see in the task details:\nAnd in the Meetings listing:\nIn SummaryEvent calendar will create a new Task and a new Meeting.\nA Task is created because Tasks are the most versatile way to handle upcoming events. For example, Tasks can be synced with Google calendar, which makes them even more useful.\n","permalink":"https://aamu.app/blog/posts/aamuapp-as-a-calendly-alternative/","summary":"\u003cp\u003eDid you know that you can use Aamu.app as a Calendly alternative? Well, you can, and more, since you can tie it up with Aamu.app’s video meetings. Here’s how.\u003c/p\u003e\u003cp\u003eFirst, go to: Project settings → Tasks → Event Booking\u003c/p\u003e\u003cimg src=\"5072143052087847_image.png\" style=\"width: auto;\" id=\"c30f960e-1db0-498f-9cfd-0a7d04452f20\"\u003e\u003cp\u003eThere you will see a host of settings. Set them as you would like — there are a lot of configuration options. In the end, what you want is the link to the event calendar. It looks like this: \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://ilkkah.aamu.app/book-event/1700500094527/15-minute-meeting\"\u003ehttps://ilkkah.aamu.app/book-event/1700500094527/15-minute-meeting\u003c/a\u003e\u003c/p\u003e","title":"Aamu.app as a Calendly alternative"},{"content":" This time, let’s create a simple application, which uses just HTML, JavaScript and Aamu.app’s database through GraphQL. So, it’s what is known as a single-page application. The source code for this application (well, one HTML file with some JavaScript in it) is at GitHub. Using this in real lifeA small warning is in order: this uses the database API key, which gives write permissions to the database. So, using this on the public Internet like this is not advised. In those cases you should do the API access on the server side.\nYou can see the general principle here and maybe that will guide you enough into real applications.\nCreate the databaseFirst you need the database at Aamu.app. Conveniently, we have a template for it. You can create a database from the template in here:\nThe AppWe will create a sort of reservation calendar, which accepts entries consisting of a title and a date, and show the current entries as a list. It would look like this:\nThe list of entries is fetched from the database with GraphQL, for which you would need an API KEY, which you can create in the Database Settings.\nA new entry is submitted through the Forms endpoint, which you can also get in the Database Settings. We could also send the form data through GraphQL API, but using the forms endpoint is easy and enough for this application.\nBoth of these should be set in the HTML file, where is says like this:\n// Set these! const API_KEY = ''; const FORM_ENDPOINT = '';How the GraphQL part works here?So, when the HTML file is loaded into the browser, this happens:\nasync function getData() { try { const response = await fetch('https://api.aamu.app/api/v1/graphql/', { method: 'POST', headers: { 'Content-Type': 'application/json', 'Accept': 'application/json', 'x-api-key': API_KEY }, body: JSON.stringify({ query: ` { Sheet1Collection(sort: { startTime: DESC }) { id created_at updated_at title startTime } } `}) }); if (!response.ok) throw new Error(`HTTP error: ${response.status}`); const data = await response.json(); if (data?.errors) { data.errors.forEach(e =\u0026gt; setError(e.message)); } else if (data?.data) { handleData(data.data); } else { setError('No data returned from API'); } } catch (err) { console.log('Error:', err); } } // Get current data from the calendar (database) getData();So, getData() is called, which fetches the rows from the database (table Sheet1) and then presents the data on the screen (function handleData).\nNote that you can do GraphQL queries very easily, using the Fetch API. You can read more about the syntax of the GraphQL queries here in our blog.\nSending the dataAs told, sending happens through the Forms API. Sharing the Forms API endpoint is safe — it can be used only for adding data. That’s it!There’s not much more to it: just fetching data from a database and adding data to a database, while showing it on a screen. This was a really simple application.\n","permalink":"https://aamu.app/blog/posts/creating-a-single-page-application-with-aamuapps-database-and-graphql-api/","summary":"\u003cp\u003eThis time, let’s create a simple application, which uses just HTML, JavaScript and Aamu.app’s database through GraphQL. So, it’s what is known as a \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://en.wikipedia.org/wiki/Single-page_application\" id=\"e95e17ae-a128-459b-be7b-25bf646a5406\"\u003esingle-page application\u003c/a\u003e. The source code for this application (well, one HTML file with some JavaScript in it) is at \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://github.com/AamuApp/example-calendar\" id=\"b4a5f114-360a-465f-a38e-78165fde9935\"\u003eGitHub\u003c/a\u003e. \u003c/p\u003e\u003ch2\u003eUsing this in real life\u003c/h2\u003e\u003cp\u003eA small warning is in order: this uses the database API key, which gives write permissions to the database. So, using this on the public Internet like this is not advised. In those cases you should do the API access on the server side.\u003c/p\u003e","title":"Creating a single-page application with Aamu.app's database and GraphQL API"},{"content":" There are (at least) three ways to create a contact form with Aamu.app. Let’s look at the first one in detail.\nIngredientsThe ingredients for this contact form are:\nHTML code for the form itself, which you can grab from https://github.com/AamuApp/contact-form\nAamu.app database, with forms enabled\nWhat you would do at your website is that you would add the HTML code, with CSS, to the appropriate location of your site, and tie the form to Aamu.app database with the Aamu.app database’s endpoint url and the Aamu.app database’s API key. Let’s see how to do all this.\nCreating the Aamu.app databaseWe have a ready-made template of the database that you can use for storing the contact form’s data — it’s under the “arrow button” just next to the “plus button” that you would normally create an empty database with. So click the arrow button and select the Contact Form:\nSetting up the database to accept form submissionsIn the database settings, you should first enable the forms API:\nYou should select the table, where the form submissions will go to:\nThen copy the Forms endpoint, and put it into the contact form’s HTML code, into \u0026lt;form action=”ENDPOINT HERE”\u0026gt;.\nCreating the FormTo create the form, let’s start by grabbing the example HTML code from GitHub. The important part of it is the \u0026lt;form\u0026gt;...\u0026lt;/form\u0026gt;:\n\u0026lt;form id=\"contactForm\" action=\"ENDPOINT_HERE\" method=\"POST\" enctype=\"multipart/form-data\" \u0026gt; \u0026lt;input type=\"hidden\" name=\"redirect-error\" value=\"https://api.aamu.app/api/v1/forms/error\"\u0026gt; \u0026lt;input type=\"hidden\" name=\"redirect-success\" value=\"https://api.aamu.app/api/v1/forms/thank-you\"\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input placeholder=\"Name\" type=\"text\" name=\"name\" id=\"form_name\" required autofocus\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input placeholder=\"Email\" type=\"text\" name=\"email\" id=\"form_email\" required\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;textarea placeholder=\"Message\" name=\"message\" id=\"form_message\" required\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;button id=\"submit\" type=\"submit\"\u0026gt;Send\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt;The way this form works, is first by the action=\"ENDPOINT_HERE\" which sends the form the API endpoint. Note the two hidden fields: redirect-error and redirect-success. You can set the redirect URLs with these. When sending the form with JavaScript, you won’t need these, but they are good to be there, since JavaScript isn’t always enabled by the user.\nForm input field bindingsAnother important point is how the form input fields’ names are matched to the database fields. The way the input field names are created is pretty straightforward — they are basically lowercase words with spaces turned into underscores. The correct input field names can also be seen in the Database settings / Forms. You can copy the \u0026lt;form\u0026gt;‘s HTML code there and use it in your applications.\nThe form which you can get from GitHub has some other niceties — for example it is submitted by JavaScript on the fly, without causing a round-trip at the server (Aamu.app’s server).\nFor example, in our contact form database, there are three fields: Name, Email, Message. These correspond to form input fields name, email, message. That’s about it!Now, if you have the form in place, point your browser to it, and test if. All the form submissions should end up in the database.\n","permalink":"https://aamu.app/blog/posts/creating-a-contact-form-with-aamuapp/","summary":"\u003cp\u003eThere are (at least) three ways to create a contact form with Aamu.app. Let’s look at the first one in detail.\u003c/p\u003e\u003ch2\u003eIngredients\u003c/h2\u003e\u003cp\u003eThe ingredients for this contact form are:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eHTML code for the form itself, which you can grab from \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://github.com/AamuApp/contact-form\"\u003ehttps://github.com/AamuApp/contact-form\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eAamu.app database, with \u003cem\u003eforms\u003c/em\u003e enabled\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eWhat you would do at your website is that you would add the HTML code, with CSS, to the appropriate location of your site, and tie the form to Aamu.app database with the Aamu.app database’s \u003ccode\u003eendpoint url\u003c/code\u003e and the Aamu.app database’s API key. Let’s see how to do all this.\u003c/p\u003e","title":"Creating a contact form with Aamu.app"},{"content":" How to create a blog with Aamu.app? Here is how I have done it for Aamu.app’s official blog at https://aamu.app/blog/.\nThe ingredients of this blog are:\nA database at Aamu.app\nFor writing the blog posts: documents at Aamu.app\nFor creating the actual blog: Hugo static site generator\nA server (with a shell access) to host the blog\nGit to publish the blog to the server (pushing the repo)\nNginx for serving the static site (git repo)\nYou can also use some other method to host the blog, for example Netlify. With this method you don’t need a server nor git. You can see the source code for the blog at https://github.com/AamuApp/aamu-blog.\nThe recipeHere’s how it goes, from start to finish.\nCreate a databaseCreate a database at Aamu.app with the provided template aamu-blog:\nYou would use this database as what is known as a “Headless CMS” — the data from the database can be retrieved from the Aamu.app’s GraphQL database API.\nInside the database you will see two tables: Blog post and Person. If you are not happy with the names, you can rename them. The table Blog post is for posts (🧐) and Person is for post authors. You should first create a row in Person which you can then link into your posts:\nThen create a row into Blog post table and fill the data accordingly. Body field will contain the blog posts HTML code. You can write the blog posts with Docs feature at Aamu.app, which we will get to next.\nHere’s a row for a blog post. “Slug” is the url component of the post.\nWhen you want to start writing the post, click the Body field of the row. You can write (copy-paste) HTML directly, or attach a Doc. Let’s attach a Doc:\nSetting up the API keyIn order to use the database as a headless CMS, it needs to be accessed from outside Aamu.app with GraphQL. You will need to create an API key and set it up for the blog build script.\nTo create an API key, go to database settings / API, and you will find what you need. Click “Generate new API key”, copy it and paste to aamu-blog’s .env file, which aamu-blog uses for environment variables.\nWriting the blog postWe will use the Aamu.app’s Docs feature to write the blog post (just as I’m doing now). Writing a doc will automatically save the HTML code to the database’s Body field. So, writing the blog post is extremely easy.\nYou can also copy-paste the HTML to the Body field, if you want to write it with some other method.\nWhen you are ready to publish the blog post, set the publishing date, author, possibly “Hero” image and any tags you would want, and set the status to “Published”.\nCreating the blog with HugoLet’s create the actual blog now. The idea goes like this:\nThe build script retrieves blog posts from Aamu.app through the GraphQL API. The script knows the timestamp when it did this the last time (the timestamp is saved into a file) and only gets the updated/new blog posts.\nThe same script saves them into content files, as well as any images.\nHugo is run to convert the content files into a blog\nThe source code, which we use for our blog, is at https://github.com/AamuApp/aamu-blog. You can use it as a starting point for your own blog, or just get ideas from it.\nYou would typically use a development machine to create the blog and then upload (possibly with git) into the hosting server. You can also do all of this at a service like Netlify. If you want to use a service, they can usually be triggered to build the blog with a build hook. You can create such a build hook at your Aamu.app database’s settings: Publishing the blogStill one thing to do: to actually publish the blog at the hosting server.\nAt the simplest, this can be done by uploading what Hugo created to the server. I have set up a git bare repo, with a post-receive hook, which handles the uploading part. Using git with a “bare repo” is a handy way to do this, but a bit more complex.\nThat’s It!Let us know if there was something that left you wondering - how could I improve this tutorial? Join our Discord server to tell!\n","permalink":"https://aamu.app/blog/posts/creating-a-blog-with-aamuapp/","summary":"\u003cp\u003eHow to create a blog with Aamu.app? Here is how I have done it for Aamu.app’s official blog at \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://aamu.app/blog/\"\u003ehttps://aamu.app/blog/\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThe ingredients of this blog are:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eA database at Aamu.app\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eFor writing the blog posts: documents at Aamu.app\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eFor creating the actual blog: \u003ca target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://gohugo.io/\" id=\"3cc0064a-8cad-48d6-93df-8f6ff1fd33b7\"\u003eHugo\u003c/a\u003e static site generator\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eA server (with a shell access) to host the blog\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eGit to publish the blog to the server (pushing the repo)\u003c/p\u003e","title":"Creating a blog with Aamu.app"},{"content":" Aamu.app database supports two APIs: one for submitting data into the database via standard HTML forms – this works just one direction. Also you can get and put data into the database via GraphQL.\nAs Wikipedia says it:\nGraphQL is an open-source data query and manipulation language.\nIt has a syntax for reading and writing the database. For testing it out, it is helpful to have a tool. I like Altair.\nTo use Altair or any similar tool you first need to setup it with the database endpoint and the database API key. The database endpoint is:\nhttps://api.aamu.app/api/v1/graphql/You can get the API key from your database settings.\nQuerying the databaseLet's assume we are using the database aamu-blog, which is the actual database which holds the blog posts you are reading now! The database looks like this in Aamu.app (at this moment in time there are only two rows, i.e. posts):\nIt has two tables: \"Blog post\" and \"Person\". Our GraphQL API will have these fields for this database (you can use for example Altair GraphQL client to see the database schema):\nSo, the GraphQL API will create two fields for each table, one for fetching a single item (by an ID), e.g. BlogPost and one (BlogPostCollection) for fetching many items (by some criteria you define).\nLet's see how to get a single item. This is the query:\nquery { BlogPost (slug: \"introduction-to-aamuapp-graphql\") { id created_at updated_at title slug description body status } }When you do the query, you will get the data back (if it exists) as json:\n{ \"data\": { \"BlogPost\": { \"id\": \"3cfa30f8-ab29-459a-ad91-0651ae0b08ad\", \"created_at\": \"2021-10-19T19:11:49.257Z\", \"updated_at\": \"2024-03-09T07:38:23.916Z\", \"title\": \"Introduction to Aamu.app GraphQL\", \"slug\": \"introduction-to-aamuapp-graphql\", \"description\": \"How to use the database from a distance\", \"body\": \"Aamu.app database supports two APIs: one for submitting data into the database via standard html forms – this works just one direction. Also you can get and put data into the database via GraphQL.\" ... etcYou can also get items by querying the field BlogPostCollection. This gives you multiple rows. You can also do filtering, sorting and pagination.\nLet's see how getting multiple posts goes. Let's get all the blog posts that are published (status is \"published\") and the results will be sorted by creation date (older first):\nquery { BlogPostCollection( filter: { status: { EQ: \"published\" } } sort: { created_at: DESC } ) { title slug created_at description } }This will give the following results:\n{ \"data\": { \"BlogPostCollection\": [ { \"title\": \"Introduction to Aamu.app GraphQL\", \"slug\": \"introduction-to-aamuapp-graphql\", \"created_at\": \"2021-10-19T09:00:00.000Z\", \"description\": \"How to use the database from a distance\" }, { \"title\": \"Introduction to Aamu.app\", \"slug\": \"introduction-to-aamu-app\", \"created_at\": \"2021-10-10T09:00:00.000Z\", \"description\": \"Aamu.app is an all-in-one productivity tool\" } ] } }You can use other filtering methods, for example GT (Greater Than):\nquery { BlogPostCollection( filter: { status: { EQ: \"published\" } updated_at: { GT: \"2022-01-04T02:15:37.975Z\" } } ) { id created_at updated_at title slug description body heroImage { url } author { name } status tags } }This is the actual query which I'm using to create this blog you are reading. This will fetch all the updated blog posts since I ran this last time (since I built the blog last time). I'm using Hugo to create this blog, and the blog posts are in Aamu's database, and I'm writing this using the Aamu's Documents feature.\nNote that there is a field called heroImage, which has a subfield url. You can find all the fields with Altair's Docs feature. It will fetch database structure, and you will see all the fields that you can query (or mutate).\nWith Altair you can also see what kind of filtering you can do. For example, Altair sees that the updated field is a date and will give you the following filtering options:\nYou can get that list by pressing Ctrl-Space. You can also get similar lists in every spot in the query window – all the fields and filtering options will be easy to see.\nMutating the databaseHere we show at how we can mutate database rows.\nAt the moment you can mutate single objects, which are targeted with the id.\nHere we update a database row in our Person table. We will target the row that we want to change with the id field. In Aamu.app, the id field is a string, and you can find the correct id by first querying the persons, possibly with some criteria. Here is an example mutation query. It will change the title of the person and return some fields that we want to see about the person.\nmutation { Person(id: \"29940627-51e8-4fd0-82ab-d718ddfe802f\", title: \"Chief Procrastination Officer (CPO)\") { id created_at updated_at name bio title } }\n","permalink":"https://aamu.app/blog/posts/introduction-to-aamuapp-graphql/","summary":"\u003cp\u003eAamu.app database supports two APIs: one for submitting data into the database via standard HTML forms – this works just one direction. Also you can get and put data into the database via GraphQL.\u003c/p\u003e\u003cp\u003eAs Wikipedia says it:\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eGraphQL is an open-source data query and manipulation language.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eIt has a syntax for reading and writing the database. For testing it out, it is helpful to have a tool. I like Altair.\u003cbr\u003eTo use Altair or any similar tool you first need to setup it with the database endpoint and the database API key. The database endpoint is:\u003c/p\u003e","title":"Introduction to Aamu.app GraphQL"},{"content":" Working collaboratively can sometimes feel like a mess. Too many apps, scattered chats, docs and tasks all over the place. Aamu.app is here to change that. It’s an all-in-one tool that brings everything your team needs into one spot, so you can stop juggling and start getting stuff done.\nWhat Makes It Cool?Here’s why Aamu.app feels like a breath of fresh air ⛅️ :\nAamu.app contains the most often used (by metric chosen by me) SaaS apps in one package. It’s got tasks tracking (with different views like a kanban board, a synced calendar), chats and posts, document editing, video calls, a helpdesk, emails, graphic design, a form builder and even databases. And what’s more — you can use many of these together — compounding their usefulness. It makes collaboration between all of these apps easy. One unified user interface, and basically one app. Whether you’re a tiny crew or a bigger group, it’s built to cut down on the chaos of using a bunch of different tools. Plus, it saves you from paying for a million separate subscriptions.\n💡 Pro-tip: if you are doing some long-term work in a document, you can always open a new tab, so you don’t have to interrupt the work in any place.\nFeaturesSo, let’s take a closer look at the features.\nBut before that, let me say that all the features work by using the keyboard only—you rarely need to touch the mouse, unless you want to, of course.\nAnd on top of that, all features and all the data is real-time, and every user can edit everything at the same time — the data is automatically synced in real-time, and you will always see the up-to-date version of any data, anywhere.\nSo, those features I promised:\nTasks: Keep track of what needs doing with a kanban board, a list or a calendar. There exists an appropriate view for every occasion. Work Together, Live: Edit documents as a team without the “which version is this?” confusion. It even has Penpot 2.x built in—a free design tool—so you don’t need something like Figma.\nTalk Without the Noise: Chat in groups, post updates, or hop on a video call with LiveKit. It’s all there, no extra apps required.\nHelpdesk: Got customers? The helpdesk handles live chats and emails, making it easy to stay on top of “tickets”.\nDatabases for Anything: Use them for customer tracking, a website, a blog or whatever you need. With GraphQL, you can get the data out (or put it in if you so wish).\nA Form Builder: collect data with a form and store it into the Database.\nCombine them: This blog that you are reading has been written with the Docs and stored in the Database — and then built into the real site (with open source tools).\nPricingWe are innovative here as well—you can pay what you want. Or more appropriately, what you think this is worth for you and how much you can afford to pay. From 0 to as much as you want. We want to test if this model works. It feels fair to us, hopefully it proves to work.\nWhat About That Name?Aamu means “morning” in Finnish. I think it’s also quite a beautiful name. And it comes early in the alphabetic. It’s simple and distinctive. And most people start working in the morning (not me). 😆 Should You Trust This Tool?Absolutely! As the founder, I bring years of experience as an entrepreneur and programmer. My earlier venture, Embed.rocks, has been reliably serving paying customers since 2016, demonstrating our commitment to quality and trust.\nWhat’s more, there are no major costs involved in running Aamu.app, so it can’t really go bankrupt. At the moment the service is run by one person only, so that’s the biggest risk—if something were to happen to me. When possible, I will take care of this issue too.\n","permalink":"https://aamu.app/blog/posts/introduction-to-aamu-app/","summary":"\u003cp\u003eWorking collaboratively can sometimes feel like a mess. Too many apps, scattered chats, docs and tasks all over the place. Aamu.app is here to change that. It’s an all-in-one tool that brings everything your team needs into one spot, so you can stop juggling and start getting stuff done.\u003c/p\u003e\u003ch2\u003eWhat Makes It Cool?\u003c/h2\u003e\u003cp\u003eHere’s why Aamu.app feels like a breath of fresh air \u003cspan data-node=\"emoji\" data-emoji=\"⛅️\" data-annotation=\"sun behind cloud\" style=\"user-select: text; font-family: \u0026quot;Twemoji Mozilla\u0026quot;, \u0026quot;Apple Color Emoji\u0026quot;, \u0026quot;Segoe UI Emoji\u0026quot;, \u0026quot;Segoe UI Symbol\u0026quot;, \u0026quot;Noto Color Emoji\u0026quot;, \u0026quot;EmojiOne Color\u0026quot;, \u0026quot;Android Emoji\u0026quot;, sans-serif;\"\u003e\u003cimg alt=\"sun behind cloud\" style=\"display: none; width: 1em; height: 1em;\"\u003e\u003cspan role=\"img\" aria-label=\"sun behind cloud\" style=\"display: inline-block;\"\u003e⛅️\u003c/span\u003e\u003c/span\u003e :\u003c/p\u003e","title":"Introduction to Aamu.app"}]